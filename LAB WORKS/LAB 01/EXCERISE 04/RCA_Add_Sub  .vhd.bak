
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity RCA_Add_Sub  is
    Port (
        X, Y : in  std_logic_vector(3 downto 0); -- 4-bit input operands
        SUB : in std_logic;                      -- Subtraction control signal
        SUM : out std_logic_vector(3 downto 0);  -- 4-bit result
        COUT : out std_logic                     -- Carry out
    );
end RCA_Add_Sub ;

architecture Behavioral of RCA_Add_Sub  is

    -- Component declaration for the Ripple Carry Adder (RCA)
    component RCA is
        Port ( A, B : in std_logic_vector(3 downto 0);
               Ci : in std_logic;
               S : out std_logic_vector(3 downto 0);
               Co : out std_logic
        );
    end component;

    -- Signals for intermediate results and carry-out
    signal RCA_Sum : std_logic_vector(3 downto 0);
    signal RCA_Cout : std_logic;

begin
    -- Instantiate the RCA component
    RCA_Unit: RCA port map (
        A => X,
        B => Y,
        Ci => '0',  -- Initialize carry-in as zero
        S => RCA_Sum,
        Co => RCA_Cout
    );

    -- Output of the RCA
    SUM <= RCA_Sum;

    -- Determine Cout based on Subtraction control
    process (SUB, RCA_Cout)
    begin
        if SUB = '1' then          -- Perform subtraction
            COUT <= not RCA_Cout;  -- Invert the carry-out of the RCA
        else                       -- Perform addition
            COUT <= RCA_Cout;      -- Carry-out of the RCA remains unchanged
        end if;
    end process;
end Behavioral;
